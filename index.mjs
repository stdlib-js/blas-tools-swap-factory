// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.2.2-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-ndarray-like-with-data-type@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-ndarray-like@v0.2.2-esm/index.mjs";import{isPrimitive as s}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-negative-integer@v0.2.2-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-data-type@v0.2.2-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-read-only@v0.2.2-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-assert-has-equal-values-indexed@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-fast-min@v0.3.0-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-without@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-ndarraylike2ndarray@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-normalize-index@v0.2.2-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-iter-stacks@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-numel@v0.2.2-esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@v0.2.2-esm/index.mjs";function v(v,g){var j;if(!e(v))throw new TypeError(u("null3c",v));if(!n(g)&&null!==g)throw new TypeError(u("invalid argument. Second argument must a data type. Value: `%s`.",g));return j=g?function(e){return t(e,g)}:r,function(e,t){var r,n,g,f,y,b,c,w,x,E,T,k,V;if(!j(e))throw new TypeError(u("invalid argument. First argument must be an ndarray-like object having a supported data type. Value: `%s`.",e));if(!j(t))throw new TypeError(u("invalid argument. Second argument must be an ndarray-like object having a supported data type. Value: `%s`.",t));if(a(e)||a(t))throw new Error("invalid argument. Cannot write to read-only array.");if(b=o(e),c=o(t),n=b.shape,g=c.shape,n.length<1)throw new TypeError(u("invalid argument. First argument must have at least one dimension."));if(g.length<1)throw new TypeError(u("invalid argument. Second argument must have at least one dimension."));if(!i(n,g))throw new Error("invalid arguments. The first and second arguments must have the same shape.");if(arguments.length>2){if(!s(r=arguments[2]))throw new TypeError(u("invalid argument. Third argument must be a negative integer. Value: `%s`.",r))}else r=-1;if(E=d(n.length,g.length)-1,-1===(r=l(r,E)))throw new RangeError(u("invalid argument. Third argument must be a value on the interval: [%d,%d]. Value: `%d`.",-E,-1,arguments[2]));if(T=n[r],1===n.length)return v(T,b.data,b.strides[0],b.offset,c.data,c.strides[0],c.offset),t;for(k=p(m(n,r)),f=h(b,[r]),y=h(c,[r]),V=0;V<k;V++)w=f.next().value,x=y.next().value,v(T,w.data,w.strides[0],w.offset,x.data,x.strides[0],x.offset);return t}}export{v as default};
//# sourceMappingURL=index.mjs.map
